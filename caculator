<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Modern Calculator</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f5f5f5;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .calculator {
      background: white;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 8px 20px rgba(0,0,0,0.1);
      width: 100%;
      max-width: 400px;
    }

    .calculator h2 {
      text-align: center;
      margin-bottom: 20px;
      color: #333;
    }

    .input-group {
      display: flex;
      flex-direction: column;
      margin-bottom: 15px;
    }

    .input-group label {
      margin-bottom: 5px;
      font-weight: bold;
      color: #555;
    }

    .input-group input,
    .input-group select {
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 6px;
      font-size: 16px;
    }

    .buttons {
      display: flex;
      gap: 10px;
      margin-top: 15px;
    }

    button {
      flex: 1;
      padding: 12px;
      font-size: 16px;
      background: #007bff;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      transition: background 0.3s;
    }

    button:hover {
      background: #0056b3;
    }

    button:disabled {
      background: #cccccc;
      cursor: not-allowed;
    }

    #output {
      margin-top: 20px;
      font-size: 18px;
      text-align: center;
      color: #333;
    }

    #output.error {
      color: red;
    }

    .history {
      margin-top: 20px;
      border-top: 1px solid #ddd;
      padding-top: 10px;
      color: #555;
      font-size: 14px;
    }

    .history-item {
      margin-bottom: 5px;
    }
  </style>
</head>
<body>

  <div class="calculator">
    <h2>Modern Calculator</h2>

    <div class="input-group">
      <label for="num1">First Number</label>
      <input type="number" id="num1" placeholder="Enter first number">
    </div>

    <div class="input-group">
      <label for="num2">Second Number</label>
      <input type="number" id="num2" placeholder="Enter second number">
    </div>

    <div class="input-group">
      <label for="operator">Operator</label>
      <select id="operator">
        <option value="+">+</option>
        <option value="-">-</option>
        <option value="*">*</option>
        <option value="/">/</option>
      </select>
    </div>

    <div class="buttons">
      <button id="calculateBtn">Calculate</button>
      <button id="clearBtn">Clear</button>
    </div>

    <p id="output"></p>

    <div class="history" id="history"></div>
  </div>

  <script>
    const num1Input = document.getElementById("num1");
    const num2Input = document.getElementById("num2");
    const operatorInput = document.getElementById("operator");
    const calculateBtn = document.getElementById("calculateBtn");
    const clearBtn = document.getElementById("clearBtn");
    const output = document.getElementById("output");
    const history = document.getElementById("history");

    function calculator(num1, num2, operator) {
      if (isNaN(num1) || isNaN(num2)) {
        return { result: "Invalid input", error: true };
      }

      switch (operator) {
        case "+":
          return { result: `The result is: ${num1 + num2}`, error: false };
        case "-":
          return { result: `The result is: ${num1 - num2}`, error: false };
        case "*":
          return { result: `The result is: ${num1 * num2}`, error: false };
        case "/":
          if (num2 === 0) {
            return { result: "You cannot divide by zero!", error: true };
          }
          return { result: `The result is: ${num1 / num2}`, error: false };
        default:
          return { result: "Invalid operator", error: true };
      }
    }

    function displayResult(resultObj) {
      output.textContent = resultObj.result;
      output.className = resultObj.error ? "error" : "";
      if (!resultObj.error) {
        const historyItem = document.createElement("div");
        historyItem.classList.add("history-item");
        historyItem.textContent = resultObj.result;
        history.appendChild(historyItem);
      }
    }

    function runCalculator() {
      const num1 = parseFloat(num1Input.value);
      const num2 = parseFloat(num2Input.value);
      const operator = operatorInput.value;
      const result = calculator(num1, num2, operator);
      displayResult(result);
    }

    function clearCalculator() {
      num1Input.value = "";
      num2Input.value = "";
      output.textContent = "";
      output.className = "";
      num1Input.focus();
    }

    calculateBtn.addEventListener("click", runCalculator);
    clearBtn.addEventListener("click", clearCalculator);

    
    document.addEventListener("keydown", function (e) {
      if (e.key === "Enter") {
        runCalculator();
      }
    });
  </script>

</body>
</html>
